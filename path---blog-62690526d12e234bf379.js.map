{"version":3,"sources":["webpack:///path---blog-62690526d12e234bf379.js","webpack:///./.cache/json/blog.json"],"names":["webpackJsonp","342","module","exports","data","allMarkdownRemark","edges","node","excerpt","id","frontmatter","title","date","path","summary","thumbnailRef","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,QAAUC,MAAQC,QAAA,uPAAAC,GAAA,oHAAAC,aAAyYC,MAAA,2CAAAC,KAAA,oBAAAC,KAAA,eAAAC,QAAA,kGAAAC,aAAA,OAAsOR,MAAQC,QAAA,wPAAAC,GAAA,2HAAAC,aAAiZC,MAAA,wCAAAC,KAAA,iBAAAC,KAAA,gCAAAC,QAAA,2IAAAC,aAAA,kBAAqSR,MAAQC,QAAA,0PAAAC,GAAA,kIAAAC,aAA0ZC,MAAA,iCAAAC,KAAA,oBAAAC,KAAA,iBAAAC,QAAA,6EAAAC,aAAA,iBAAmNR,MAAQC,QAAA,0PAAAC,GAAA,wHAAAC,aAAgZC,MAAA,wBAAAC,KAAA,oBAAAC,KAAA,yBAAAC,QAAA,6KAAAC,aAAA,iBAAkTR,MAAQC,QAAA,0PAAAC,GAAA,iIAAAC,aAAyZC,MAAA,yBAAAC,KAAA,oBAAAC,KAAA,0BAAAC,QAAA,+MAAAC,aAAA,gBAAqVR,MAAQC,QAAA,8PAAAC,GAAA,kIAAAC,aAA8ZC,MAAA,0BAAAC,KAAA,oBAAAC,KAAA,2BAAAC,QAAA,wIAAAC,aAAA,SAAwQC","file":"path---blog-62690526d12e234bf379.js","sourcesContent":["webpackJsonp([49683490770531],{\n\n/***/ 342:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"I've recently began working on a side project that requires me to serve files over https. Given some trial and error, I managed to get a server up and running perfectly. I thought I'd share which solution worked best for me. I've always been a…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-12-30-ssl-nginx/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"How To Serve Files Over HTTPS with Nginx\",\"date\":\"December 30, 2016\",\"path\":\"/https-nginx\",\"summary\":\"Learn how to create a self-signed SSL certificate and serve static files over HTTPS with Nginx.\",\"thumbnailRef\":\"\"}}},{\"node\":{\"excerpt\":\"I always want to make my blog posts more entertaining. Should I be more funny? Should I be clever? Should I be cool? I'm not cool. I'm just going to keep this post short and to the point. What is a predictable state container? Predictable state…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-04-21-state-containers/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Building Predictable State Containers\",\"date\":\"April 21, 2016\",\"path\":\"/predictable-state-containers\",\"summary\":\"There's always more than one solution to a given problem. What if redux didn't exist? How would you build an observable state container?\",\"thumbnailRef\":\"lambda-logo\"}}},{\"node\":{\"excerpt\":\"Motivation Mounting applications within applications is a powerful technique, that allows developers to build highly scalable applications that are both cost effective and easy to maintain.  Rails Engines  give developers the power to transform a…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-02-29-rails-mountable-engines/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Using Rails Engines Like a Pro\",\"date\":\"February 29, 2016\",\"path\":\"/rails-engines\",\"summary\":\"Learn how to create small reusable rails applications using rails engines.\",\"thumbnailRef\":\"rails-logo\"}}},{\"node\":{\"excerpt\":\"λ Reduce Procedure The  reduce  function is an extremely powerful tool that is used to build new data sets from existing collections of data. The  reduce  function is a  higher-order function  that accepts at least two arguments: a  pure function…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-02-16-hacking-redux/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Redux Design Patterns\",\"date\":\"February 16, 2016\",\"path\":\"/redux-design-patterns\",\"summary\":\"Redux leverages functional design patterns to manage state containers. Let's take a deeper look into how those design patterns work to implement our own version of Redux.\",\"thumbnailRef\":\"redux-logo\"}}},{\"node\":{\"excerpt\":\"The flux dispatcher is not a traditional  event emitter  that we, javascript developers, know and love. The flux dispatcher is meant to broadcast unidirectional messages. Messages, that are emitted by one or more publishers to a single subscriber…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-02-09-flux-dispatcher-primer/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Flux Dispatcher Primer\",\"date\":\"February 09, 2016\",\"path\":\"/flux-dispatcher-primer\",\"summary\":\"The flux dispatcher is not a traditional event-emitter that we, javascript developers, know and love. The flux dispatcher broadcasts messages to a single subscriber, resulting in unidirectional data flow.\",\"thumbnailRef\":\"flux-logo\"}}},{\"node\":{\"excerpt\":\"Hacking is about taking things apart, figuring out how something works and using that knowledge to build something new and useful. In this blog post, I want to hack event emitters, as they're an essential messaging pattern to understanding javascript…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/02-05-2016-event-emitter-mechanics/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Event Emitter Mechanics\",\"date\":\"February 05, 2016\",\"path\":\"/event-emitter-mechanics\",\"summary\":\"UI programming is event driven, so a deep understanding of the mechanics of event-emitters is essential to every front-end developer.\",\"thumbnailRef\":\"\"}}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-62690526d12e234bf379.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"I've recently began working on a side project that requires me to serve files over https. Given some trial and error, I managed to get a server up and running perfectly. I thought I'd share which solution worked best for me. I've always been a…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-12-30-ssl-nginx/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"How To Serve Files Over HTTPS with Nginx\",\"date\":\"December 30, 2016\",\"path\":\"/https-nginx\",\"summary\":\"Learn how to create a self-signed SSL certificate and serve static files over HTTPS with Nginx.\",\"thumbnailRef\":\"\"}}},{\"node\":{\"excerpt\":\"I always want to make my blog posts more entertaining. Should I be more funny? Should I be clever? Should I be cool? I'm not cool. I'm just going to keep this post short and to the point. What is a predictable state container? Predictable state…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-04-21-state-containers/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Building Predictable State Containers\",\"date\":\"April 21, 2016\",\"path\":\"/predictable-state-containers\",\"summary\":\"There's always more than one solution to a given problem. What if redux didn't exist? How would you build an observable state container?\",\"thumbnailRef\":\"lambda-logo\"}}},{\"node\":{\"excerpt\":\"Motivation Mounting applications within applications is a powerful technique, that allows developers to build highly scalable applications that are both cost effective and easy to maintain.  Rails Engines  give developers the power to transform a…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-02-29-rails-mountable-engines/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Using Rails Engines Like a Pro\",\"date\":\"February 29, 2016\",\"path\":\"/rails-engines\",\"summary\":\"Learn how to create small reusable rails applications using rails engines.\",\"thumbnailRef\":\"rails-logo\"}}},{\"node\":{\"excerpt\":\"λ Reduce Procedure The  reduce  function is an extremely powerful tool that is used to build new data sets from existing collections of data. The  reduce  function is a  higher-order function  that accepts at least two arguments: a  pure function…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-02-16-hacking-redux/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Redux Design Patterns\",\"date\":\"February 16, 2016\",\"path\":\"/redux-design-patterns\",\"summary\":\"Redux leverages functional design patterns to manage state containers. Let's take a deeper look into how those design patterns work to implement our own version of Redux.\",\"thumbnailRef\":\"redux-logo\"}}},{\"node\":{\"excerpt\":\"The flux dispatcher is not a traditional  event emitter  that we, javascript developers, know and love. The flux dispatcher is meant to broadcast unidirectional messages. Messages, that are emitted by one or more publishers to a single subscriber…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/2016-02-09-flux-dispatcher-primer/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Flux Dispatcher Primer\",\"date\":\"February 09, 2016\",\"path\":\"/flux-dispatcher-primer\",\"summary\":\"The flux dispatcher is not a traditional event-emitter that we, javascript developers, know and love. The flux dispatcher broadcasts messages to a single subscriber, resulting in unidirectional data flow.\",\"thumbnailRef\":\"flux-logo\"}}},{\"node\":{\"excerpt\":\"Hacking is about taking things apart, figuring out how something works and using that knowledge to build something new and useful. In this blog post, I want to hack event emitters, as they're an essential messaging pattern to understanding javascript…\",\"id\":\"/Users/paul/web/paulserraino.github.io/src/posts/02-05-2016-event-emitter-mechanics/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Event Emitter Mechanics\",\"date\":\"February 05, 2016\",\"path\":\"/event-emitter-mechanics\",\"summary\":\"UI programming is event driven, so a deep understanding of the mechanics of event-emitters is essential to every front-end developer.\",\"thumbnailRef\":\"\"}}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog.json\n// module id = 342\n// module chunks = 49683490770531"],"sourceRoot":""}